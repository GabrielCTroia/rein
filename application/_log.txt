DISCLAIMER
Append here everything we do in one working session.
I think it's a better approach than writing the readme in GIT. (we can keep them both anyway)

---------------------------------------------------------------------------------------

TO KEEP IN MIND:
- After every failed/successful request, send status_codes to the original page. For example, on twitter authorization, it redirects
      redirect( '/home/settings?service=twitter&status_code=200' );
- Skim over the auth_twitter class and how it talks to the auth/controller to keep things similar

TO DO:
- build a status_code + status_message repository so if an error comes across whil adding new services we can better debug them
- /controller/auth - line 92 - double check if users already authenticated before inserting another entry
- add a settings link in the logged in header menu
- B

- store the posts in the DB - got to find a way to work with thte dynamic tables posts_{Service} 
  
- Add few more Services

- Design 

- Keep it simple for now, focus more on speed than optimization 

- Launch alpha version

- CRTEATE AN ERROR CLASS available everytwhere 

- LOOK a little on the sign-up adding to session procedure


-----------------------------------------------------------------------------------------


Log started - Mar 10 2013, 10:30AM                                          GABRIEL

  - created an Api_class which is extended by all the models and service models which are using the Api t
 
  - the file /models/services/service_name/load_library.php is official needed and loaded in the parent s constructor

  - cloned the the Vimeo library from git (that's probably how we should have them from now on - cloned and abstractized so can be updated easily)
  
  - trying to fetch Behance
  
  - started with Behance - Auth is working
  
  - started to fetch - errors in the library
  
  - created the Auth
  
  - started to bring Vimeo into picture  
  

Log ended - Mar 10 2013, - 05:00 PM 

-----------

Log started - Mar 09 2013, 10:30AM                                          GABRIEL
    
  - instagram working (with OwnMedia for now)
  
  - succesfuly insert on Duplicate Update

  - organized the session->userdata better. Now the infos are in user data rather than in logged_in as before. logged in is only true;

  - started the insert procedures
 
  - organized the code a little betetr in the fetch controller 
    
    - all the errors should be catched first - like this if( !fetch() ) { echo error_msg } else { do something } 
    
    - started to write what;'s included in each files at thre beggining of the file
  
  - signup + login component - type = password

Log ended - Mar 09 2013, - 3:18AM

-----------

Log started - MARCH 03 , 13 - 11AM                                           GABRIEL

  - Instagram Live fetching (only works with user's media though not with likedMedia but that's fixable)
  
  - Fixed the bug where Auth inserts a new row instead of UPDATING the old one - ON DUPLICATE KEY UPDATE did the trick
  
  - Signup is working again

  - Get the posts in the feed from the DB is working - again only for Instagram but should do it for now
  
  - created a Format_class.php and Format_interface.php for formating the posts before return. It's called ini the controller for now, but I think it would be better if we just have a method in the fetch_{service}.php - less code, cleaner. 


Log ended - MARCH 03 , 13 - 11PM                                         

-----------

Log started - February 10, 13 - 11AM                                          MARIUS

  - on failed request token requests, redirect back to settings page and pass 2 arguments in the URL, the service and status_code
    
    We might as well start making up status codes for certain results, with the first one being
    
    222 = Error retrieving OAuth token/verifier
    223 = Error retrieving OAuth token/secret
    522 = generate_access_token missing functionality (must define in auth_{service}.php)
    523 = Missing OAuth verification
  
  - Built Twitter OAuth functionality. You can now click the link through /home/settings and have your access tokens saved
  
  - Made the verify_login check passwords agains md5 as they were being saved as md5 but not checked against it.
  
  - fixed a bug where user id wasn't being stored in the session

Log ended - Feburary 10, 5:47 PM

-----------

Log started - January 22, 13 - 12:42 PM                                           GABRIEL
  
  - not sure how is the best: "to let the services call the url /callback/service/{service_name}" OR to call authenticate/callback/{service_name}. 
    Probably better with the later one because I already have the auth_{service_name} model created and I just need to add teh callback function.
  
  - DONE / to do: add a {reqest_access_token} method in authenticate
  
  - DONE / to do: change /service/ from the URL below to something like authenticate/{request_temp_token}/{service_name}
  
  - manage to set the link /authenticate/service/{service_name} to redirect to the service name and be redirectede to the callback url with the code (only instagram for now tested)

  - added the Auth_abstract model with its subclasses Auth_{service_name} 

  - added the core/Anonym_controller - to load whenever a anonymous is browsing the site. to be implemented later

  - added the core/Cron_controller - to load from it whenever CRON is working and doesn't need log in
  
  - added the core/User_controller - to load from it whenever we want to check if it's logged in

Log ended - January 21,13 -                     

-----------

Log started - January 21, 13 - 7:51 PM                                           GABRIEL

  
  - made the fetch/live fetching data but still not working properly (cannot use the old access_token for instagram so I need to get it again) gonna' work on access_mode now
  
  - changed connect to fetch in all the models and controllers

Log ended - January 21,13 -                     

-----------

Log started - January 14, 13 - 5:42 PM                                           GABRIEL
  
  - changed .center to .grid
  
  - took the <div class="center">{content}</div> out of each component and put it page. Try to stay as DRY here as we can.  

Log ended - January 14,13 -                     

-----------

Log started - January 5, 13 - 2:25 PM                                            GABRIEL

  I've done a lot here:))

Log ended - January 5,13 -                     

